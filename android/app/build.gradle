plugins {
    id 'org.jetbrains.kotlin.android' version '1.7.10'
    id "com.android.application"
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file("local.properties")
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader("UTF-8") { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty("flutter.versionCode")
if (flutterVersionCode == null) {
    flutterVersionCode = "7"
}

def flutterVersionName = localProperties.getProperty("flutter.versionName")
if (flutterVersionName == null) {
    flutterVersionName = "1.0.1"
}

android {
    namespace = "com.example.mobi_tv_entertainment"
    compileSdk = flutter.compileSdkVersion
    ndkVersion = flutter.ndkVersion

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    signingConfigs {
        release {
            keyAlias 'ekamflix'
            keyPassword 'ekamflix'
            storeFile file('ekamflix-keystore.jks')
            storePassword 'ekamflix'
        }
    }

    defaultConfig {
        applicationId "com.ekamflixandroidtv.cti"
        minSdk 21
        targetSdk 34
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
    }

    packagingOptions {
       // Fixes duplicate libraries build issue, 
       // when your project uses more than one plugin that depend on C++ libs.
        pickFirst 'lib/**/libc++_shared.so'
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
            // Enables code shrinking, obfuscation, and optimization for only
            // your project's release build type. Make sure to use a build
            // variant with `debuggable false`.
            // minifyEnabled true

            // // Enables resource shrinking, which is performed by the
            // // Android Gradle plugin.
            // shrinkResources true

            // // Includes the default ProGuard rules files that are packaged with
            // // the Android Gradle plugin. To learn more, go to the section about
            // // R8 configuration files.
            // proguardFiles getDefaultProguardFile(
            //         'proguard-android-optimize.txt'),
            //         'proguard-rules.pro'
        }
    }
}

flutter {
    source = "../.."
}




